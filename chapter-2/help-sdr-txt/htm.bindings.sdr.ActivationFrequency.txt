Help on class ActivationFrequency in htm.bindings.sdr:

htm.bindings.sdr.ActivationFrequency = class ActivationFrequency(MetricsHelper_)
 |  Measures the activation frequency of each value in an SDR.  This accumulates
 |  measurements using an exponential moving average, and outputs a summary of
 |  results.
 |  
 |  Activation frequencies are Real numbers in the range [0, 1], where zero
 |  indicates never active, and one indicates always active.
 |  Example Usage:
 |      A = SDR( 2 )
 |      B = ActivationFrequency( A, period = 1000 )
 |      A.dense = [0, 0]
 |      A.dense = [0, 1]
 |      A.dense = [1, 1]
 |      B.activationFrequency -> { 0.33, 0.66 }
 |      B.min()     -> 1/3
 |      B.max()     -> 2/3
 |      B.mean()    -> 1/2
 |      B.std()     -> ~0.16
 |      B.entropy() -> ~0.92
 |      str(B)      -> Activation Frequency Min/Mean/Std/Max 0.333333 / 0.5 / 0.166667 / 0.666667
 |                     Entropy 0.918296
 |  
 |  Method resolution order:
 |      ActivationFrequency
 |      MetricsHelper_
 |      pybind11_builtins.pybind11_object
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(...)
 |      __init__(*args, **kwargs)
 |      Overloaded function.
 |      
 |      1. __init__(self: htm.bindings.sdr.ActivationFrequency, sdr: htm.bindings.sdr.SDR, period: int, initialValue: float = -1) -> None
 |      
 |      Argument sdr is data source to track.  Add data to this ActivationFrequency
 |      instance by assigning to this SDR.
 |      
 |      Argument period is time constant for exponential moving average.
 |      
 |      Argument initialValue is Optional.  Makes this ActivationFrequency instance
 |      think that it is the result of a long running process (even though it was just
 |      created).  This assigns an initial activation frequency to all bits in the SDR,
 |      and causes it to always use the exponential moving average instead of the
 |      regular average which is usually applied to the first "period" many samples.
 |      
 |      Note: This argument is useful for using this metric as part of boosting
 |            algorithms which seek to push the activation frequencies to a target
 |            value. These algorithms will overreact to the default early behavior of
 |            this class during the first "period" many samples.
 |      
 |      
 |      2. __init__(self: htm.bindings.sdr.ActivationFrequency, dimensions: List[int], period: int, initialValue: float = -1) -> None
 |      
 |      Argument dimensions of SDR.  Add data to this ActivationFrequency
 |      instance by calling method af.addData( SDR ) with an SDR which has
 |      these dimensions.
 |      
 |      Argument period is time constant for exponential moving average.
 |  
 |  __str__(...)
 |      __str__(self: htm.bindings.sdr.ActivationFrequency) -> object
 |  
 |  entropy(...)
 |      entropy(self: htm.bindings.sdr.ActivationFrequency) -> float
 |      
 |      Binary entropy is a measurement of information.  It measures how well the
 |      SDR utilizes its resources (bits).  A low entropy indicates that many
 |      bits in the SDR are under-utilized and do not transmit as much
 |      information as they could.  A high entropy indicates that the SDR
 |      optimally utilizes its resources.  The most optimal use of SDR resources
 |      is when all bits have an equal activation frequency.  For convenience,
 |      the entropy is scaled by the theoretical maximum into the range [0, 1].
 |      
 |      Returns binary entropy of SDR, scaled to range [0, 1].
 |  
 |  max(...)
 |      max(self: htm.bindings.sdr.ActivationFrequency) -> float
 |      
 |      Maximum of Activation Frequencies
 |  
 |  mean(...)
 |      mean(self: htm.bindings.sdr.ActivationFrequency) -> float
 |      
 |      Average of Activation Frequencies
 |  
 |  min(...)
 |      min(self: htm.bindings.sdr.ActivationFrequency) -> float
 |      
 |      Minimum of Activation Frequencies
 |  
 |  std(...)
 |      std(self: htm.bindings.sdr.ActivationFrequency) -> float
 |      
 |      Standard Deviation of Activation Frequencies
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  activationFrequency
 |      Data Buffer of Activation Frequencies
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from MetricsHelper_:
 |  
 |  addData(...)
 |      addData(self: htm.bindings.sdr.MetricsHelper_, arg0: htm.bindings.sdr.SDR) -> None
 |      
 |      Add an SDR datum to this Metric.  This method can only be called if the
 |      Metric was constructed with dimensions and NOT an SDR.
 |      
 |      Argument sdr is data source, its dimensions must be the same as this Metric's
 |      dimensions.
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from MetricsHelper_:
 |  
 |  dimensions
 |      Shape of the SDR data source.
 |  
 |  period
 |      Time constant for the exponential moving average which incorporate data into
 |      this measurement.  If there are fewer data samples than the period then a regular
 |      average is used instead of an exponential moving average.
 |  
 |  samples
 |      Number of data samples received & incorporated into this measurement.
 |  
 |  ----------------------------------------------------------------------
 |  Static methods inherited from pybind11_builtins.pybind11_object:
 |  
 |  __new__(*args, **kwargs) from pybind11_builtins.pybind11_type
 |      Create and return a new object.  See help(type) for accurate signature.
